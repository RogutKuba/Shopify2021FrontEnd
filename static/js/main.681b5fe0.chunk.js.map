{"version":3,"sources":["logo.svg","components/SearchBar.js","components/MovieResults.js","components/Nominees.js","components/AppHome.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","query","setQuery","handleSearchMovies","style","display","padding","border","borderRadius","backgroundColor","flexDirection","justifyContent","textAlign","alignItems","marginTop","position","left","cursor","onClick","type","value","onChange","e","target","onKeyUp","keyCode","minWidth","MovieResults","loadingresults","results","searchMovies","nominees","setNominees","currentpage","pagestoshow","setFromLink","length","fontSize","fontWeight","borderTop","width","margin","map","r","index","paddingBottom","borderBottom","src","Poster","height","wordBreak","Title","color","Year","newNominee","oldNoms","window","alert","disabled","findIndex","n","imdbID","page","marginLeft","Nominees","fromlink","useState","link","setLink","useEffect","marginBottom","base","location","href","split","movieIDs","join","newNoms","splice","console","log","handleUnNominate","AppHome","setResults","setCurrentPage","setPagesToShow","showbanner","setShowBanner","a","search","params","URLSearchParams","get","sharedNomID","url","axios","then","res","data","JSON","parse","localStorage","getItem","setItem","stringify","pageNo","Search","calculateNewPages","Math","ceil","totalResults","newPage","maxPages","newPagesToShow","push","unshift","i","minHeight","maxHeight","top","right","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.681b5fe0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\n\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\n\r\nexport default function SearchBar({\r\n    query,\r\n    setQuery,\r\n    handleSearchMovies,\r\n})\r\n{\r\n\r\n    return(\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                padding: 30,\r\n                border: '1px solid rgba(200, 200, 200, 1)',\r\n                borderRadius: 5,\r\n                backgroundColor: 'rgba(250, 250, 250, 1)',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    textAlign: 'center'\r\n                }}\r\n            >\r\n                Search Movies By Title\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginTop: 5,\r\n                    position: 'relative',\r\n                }}\r\n            >\r\n                <button\r\n                    style={{\r\n                        display: 'flex',\r\n                        borderRadius: 50,\r\n                        alignItems: 'center',\r\n                        position: 'absolute',\r\n                        left: 5,\r\n                        border: 'none',\r\n                        padding: 5,\r\n                        cursor: 'pointer',\r\n                    }}\r\n                    onClick={handleSearchMovies}\r\n                >\r\n                    <FaSearch/>\r\n                </button>\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    onKeyUp={(e) => {\r\n                        if(e.keyCode === 13)\r\n                        {\r\n                            handleSearchMovies()\r\n                        }\r\n                    }}\r\n                    style={{\r\n                        minWidth: 350,\r\n                        padding: '5px 5px 5px 40px',\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nexport default function MovieResults({\r\n    query,\r\n    loadingresults,\r\n    results=[],\r\n    searchMovies,\r\n    nominees,\r\n    setNominees,\r\n    currentpage,\r\n    pagestoshow,\r\n    setFromLink,\r\n})\r\n{\r\n    const handleNominate = (newNominee) => {\r\n        if(nominees.length < 5)\r\n        {\r\n            setNominees((oldNoms) => [...oldNoms, newNominee])\r\n            setFromLink(false)\r\n        } else window.alert(\"You have reached the maximum number of nominations\")\r\n    }\r\n\r\n    return(\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                padding: 30,\r\n                border: '1px solid rgba(200, 200, 200, 1)',\r\n                borderRadius: 5,\r\n                backgroundColor: 'rgba(250, 250, 250, 1)',\r\n                flexDirection: 'column',\r\n                minWidth: 525,\r\n                justifyContent: query == '' ? 'center' : null,\r\n            }}\r\n        >\r\n            { query == '' && results.length === 0 ? (\r\n                    <span\r\n                        style={{\r\n                            textAlign: 'center'\r\n                        }}\r\n                    >\r\n                        Please Search For Movies To Nominate\r\n                    </span>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <span\r\n                            style={{\r\n                                fontSize: 18,\r\n                                fontWeight: \"bold\",\r\n                            }}\r\n                        >\r\n                            Results for \"{query}\"\r\n                        </span>\r\n\r\n                        <div style={{ borderTop: '1px solid rgba(175, 175, 175, 0.5)', width: '85%', margin: '10px 0 10px 0' }} ></div>\r\n\r\n                        {results.map((r, index) => {\r\n                            return(\r\n                                <div\r\n                                    key={`${r.imdbID}${index}`}\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        width: '100%',\r\n                                        justifyContent: 'space-around',\r\n                                        alignItems: 'center',\r\n                                        marginTop: 15,\r\n                                        paddingBottom: 15,\r\n                                        borderBottom: index !== results.length - 1 ? \"1px solid rgba(0, 0, 0, 0.25)\" : null\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        src={r.Poster}\r\n                                        height={90}\r\n                                        width={60}\r\n                                        style={{\r\n                                            borderRadius: 3,\r\n                                            border: '1px solid rgba(0, 0, 0, 0.15)', //rgba(175, 175, 175, 0.5)\r\n                                        }}\r\n                                    >    \r\n                                    </img>\r\n\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            flexDirection: 'column',\r\n                                            width: 400,\r\n                                            textAlign: 'center',\r\n                                        }}\r\n                                    >\r\n                                        <span\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                wordBreak: 'break-word',\r\n                                                textAlign: 'center'\r\n                                            }}\r\n                                        >\r\n                                            {r.Title}\r\n                                        </span>\r\n                                        <span\r\n                                            style={{\r\n                                                fontSize: 14,\r\n                                                color: 'rgba(0, 0, 0, 0.75)'\r\n                                            }}\r\n                                        >\r\n                                            {r.Year}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        onClick={() => handleNominate(r)}\r\n                                        disabled={nominees.findIndex((n) => n.imdbID === r.imdbID) !== -1}\r\n                                    >\r\n                                        { nominees.findIndex((n) => n.imdbID === r.imdbID) === -1 ? \"Nominate\" : \"Nominated\" }\r\n                                    </button>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        { pagestoshow.length > 1 &&\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    marginTop: 35,\r\n                                    //borderTop: '1px solid rgba(0, 0, 0, 0.15)'\r\n                                }}\r\n                            >\r\n                                {pagestoshow.map((page, index) => {\r\n                                    return(\r\n                                        <button\r\n                                            key={`Page${page}${index}`}\r\n                                            onClick={() => searchMovies(page)}\r\n                                            style={{\r\n                                                width: 50,\r\n                                                borderRadius: 5,\r\n                                                border: '1px solid #437FC7',\r\n                                                backgroundColor: currentpage === page ? '#b3d5ff' : '#6DAFFE',\r\n                                                padding: 5,\r\n                                                marginLeft: index === 0 ? null : 15,\r\n                                            }}\r\n                                        >\r\n                                            {page}\r\n                                        </button>\r\n                                    )\r\n                                }) }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function Nominees({\r\n    nominees,\r\n    setNominees,\r\n    fromlink,\r\n    setFromLink\r\n})\r\n{\r\n    const [link, setLink] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setLink(null)\r\n    }, [nominees])\r\n\r\n    const handleUnNominate = (index) => {\r\n\r\n        const newNoms = [...nominees]\r\n\r\n        newNoms.splice(index, 1)\r\n\r\n        console.log('new noms', newNoms, index)\r\n\r\n        setFromLink(false)\r\n\r\n        setNominees(newNoms)\r\n    }\r\n\r\n    const createShareableLink = () => {\r\n        const base = window.location.href.split('?nominees')[0]\r\n\r\n        var movieIDs = nominees.map((n) => n.imdbID).join('_')\r\n\r\n        setLink(`${base}?nominees=${movieIDs}`)\r\n    }\r\n\r\n    return(\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                padding: 30,\r\n                border: '1px solid rgba(200, 200, 200, 1)',\r\n                borderRadius: 5,\r\n                backgroundColor: 'rgba(250, 250, 250, 1)',\r\n                flexDirection: 'column',\r\n                minWidth: 525,\r\n                marginLeft: 35,\r\n                alignItems: 'center'\r\n            }}\r\n        >\r\n            <span\r\n                style={{\r\n                    fontSize: 18,\r\n                    fontWeight: \"bold\",\r\n                }}\r\n            >\r\n                Your Nominees\r\n            </span>\r\n\r\n            <div style={{ borderTop: '1px solid rgba(175, 175, 175, 0.5)', width: '85%', margin: '10px 0 10px 0' }} ></div>\r\n\r\n                        \r\n            {!fromlink && (\r\n                <button\r\n                    style={{\r\n                        marginTop: 15,\r\n                        marginBottom : !link ? 15 : 10,\r\n                    }}\r\n                    onClick={createShareableLink}\r\n                >\r\n                    Click Here To Share Your Nominations\r\n                </button>\r\n            )}\r\n\r\n            {link && \r\n                <a\r\n                    style={{\r\n                        display: 'flex',\r\n                        marginBottom : 15,\r\n                        wordBreak: 'break-word',\r\n                        textAlign: 'center'\r\n                        //width: '100%'\r\n                    }}\r\n                    href={link}\r\n                >\r\n                    {link}\r\n                </a>\r\n            }\r\n\r\n            {nominees.length === 0 ? (\r\n                <span>No Nominees</span>\r\n            ) : (\r\n                nominees.map((n, index) => {\r\n                    return(\r\n                        <div\r\n                            key={n.imdbID}\r\n                            style={{\r\n                                display: 'flex',\r\n                                width: '100%',\r\n                                justifyContent: 'space-around',\r\n                                alignItems: 'center',\r\n                                marginTop: 15,\r\n                                paddingBottom: 15,\r\n                                borderBottom: index !== nominees.length - 1 ? \"1px solid rgba(0, 0, 0, 0.25)\" : null\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={n.Poster}\r\n                                height={90}\r\n                                width={60}\r\n                                style={{\r\n                                    borderRadius: 3,\r\n                                    border: '1px solid rgba(0, 0, 0, 0.15)', //rgba(175, 175, 175, 0.5)\r\n                                }}\r\n                            >    \r\n                            </img>\r\n\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    flexDirection: 'column',\r\n                                    width: 400,\r\n                                    textAlign: 'center',\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        wordBreak: 'break-word',\r\n                                        textAlign: 'center'\r\n                                    }}\r\n                                >\r\n                                    {n.Title}\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        fontSize: 14,\r\n                                        color: 'rgba(0, 0, 0, 0.75)'\r\n                                    }}\r\n                                >\r\n                                    {n.Year}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <button\r\n                                onClick={() => handleUnNominate(index)}\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nimport SearchBar from './SearchBar'\r\nimport MovieResults from './MovieResults'\r\nimport Nominees from './Nominees'\r\n\r\nimport { \r\n    FaTimes,\r\n} from 'react-icons/fa';\r\n\r\nexport default function AppHome()\r\n{\r\n\r\n    const [query, setQuery] = useState(\"\")\r\n    const [loadingresults, setLoadingResults] = useState(false)\r\n    const [results, setResults] = useState([])\r\n\r\n    const [nominees, setNominees] = useState([])\r\n\r\n    const [currentpage, setCurrentPage] = useState(1)\r\n    const [pagestoshow, setPagesToShow] = useState([1])\r\n\r\n    const [showbanner, setShowBanner] = useState(false)\r\n\r\n    const [fromlink, setFromLink] = useState(false)\r\n\r\n    useEffect(async () => {\r\n\r\n        try {\r\n            const search = window.location.search;\r\n            const params = new URLSearchParams(search);\r\n            const sharedNomineeIDS = params.get('nominees').split('_')\r\n\r\n            sharedNomineeIDS.map(async (sharedNomID) => {\r\n                const url = `https://www.omdbapi.com/?i=${sharedNomID}&type=movie&apikey=97d1cff9`\r\n\r\n                await axios.get(url)\r\n                .then((res) => {\r\n                    setNominees((oldNoms) => [...oldNoms, res.data])\r\n                })\r\n            })\r\n            setFromLink(true)\r\n        }\r\n        catch {\r\n            try{    \r\n                setNominees(JSON.parse(localStorage.getItem(\"nominees\")))\r\n            }\r\n            catch{\r\n                setNominees([])\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"nominees\", JSON.stringify(nominees))\r\n\r\n        if(nominees.length === 5)\r\n        {\r\n            setShowBanner(true)\r\n        } else setShowBanner(false)\r\n    }, [nominees])\r\n\r\n    const searchMovies = async (pageNo) => {\r\n        const url = `https://www.omdbapi.com/?s=${query}&page=${pageNo}&type=movie&apikey=97d1cff9`\r\n\r\n        await axios.get(url)\r\n        .then(async (res) => {\r\n            console.log(res.data)\r\n            setResults(res.data.Search)\r\n            \r\n            setCurrentPage(pageNo)\r\n            calculateNewPages(pageNo, Math.ceil(res.data.totalResults / 10))\r\n        })\r\n    }\r\n\r\n    const calculateNewPages = async (newPage, maxPages) => {    \r\n        var newPagesToShow = []\r\n\r\n        if(maxPages > 5)\r\n        {\r\n            if(newPage === 1)\r\n            {\r\n                newPagesToShow = [1, 2, 3, 4, maxPages]\r\n            }\r\n            else if(newPage === maxPages)\r\n            {\r\n                newPagesToShow = [1, maxPages - 3, maxPages - 2, maxPages - 1, maxPages]\r\n            }\r\n            else \r\n            {\r\n                newPagesToShow.push(newPage - 1, newPage, newPage + 1)\r\n\r\n                if(newPagesToShow[0] === 1)\r\n                {\r\n                    newPagesToShow.push(newPage + 2, maxPages)\r\n                }\r\n                else if(newPagesToShow[2] == maxPages)\r\n                {\r\n                    newPagesToShow.unshift(1, newPage - 2)\r\n                }\r\n                else\r\n                {\r\n                    newPagesToShow.unshift(1)\r\n                    newPagesToShow.push(maxPages)\r\n                }\r\n            }\r\n        }\r\n        else \r\n        {\r\n            for(let i = 0; i < maxPages; i++)\r\n            {\r\n                newPagesToShow.push(i + 1)\r\n            }\r\n        }\r\n        setPagesToShow(newPagesToShow)\r\n    }\r\n\r\n    const handleSearchMovies = () => {\r\n        searchMovies(1)\r\n    }\r\n\r\n    return(\r\n        <div\r\n            style={{\r\n                minHeight: '100vh',\r\n                minWidth: '100vh',\r\n                backgroundColor: 'rgba(240, 240, 240, 1)',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                { showbanner && !fromlink && (\r\n                    <div\r\n                        style={{\r\n                            width: '100vmax',\r\n                            textAlign: 'center',\r\n                            fontSize: 32,\r\n                            maxHeight: 350,\r\n                            backgroundColor: 'rgba(150, 255, 150, 0.75)',\r\n                            padding: '50px 0px' \r\n                        }}\r\n                    >\r\n                        <button \r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 5,\r\n                                right: 5,\r\n                                backgroundColor: 'rgba(0, 0, 0, 0)',\r\n                                border: 'none',\r\n                            }}\r\n                            onClick={() => setShowBanner(false)}\r\n                        >\r\n                            <FaTimes size={25} />\r\n                        </button>\r\n\r\n                        You have nominated your 5 movies for the shoppies!\r\n                    </div>\r\n                )}\r\n\r\n                <span\r\n                    style={{\r\n                        marginBottom: 30,\r\n                        fontSize: 30,\r\n                        marginTop: 50,\r\n                    }}\r\n                >\r\n                    The Shoppies\r\n                </span>\r\n\r\n                <SearchBar\r\n                    query={query}\r\n                    setQuery={setQuery}\r\n                    handleSearchMovies={handleSearchMovies}\r\n                />\r\n\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        marginTop: 30,\r\n                        marginBottom: 50,\r\n                    }}\r\n                >\r\n                    <MovieResults\r\n                        query={query}\r\n                        loadingresults={loadingresults}\r\n                        results={results}\r\n                        searchMovies={searchMovies}\r\n                        nominees={nominees}\r\n                        setNominees={setNominees}\r\n                        currentpage={currentpage}\r\n                        pagestoshow={pagestoshow}\r\n                        setFromLink={setFromLink}\r\n                    />\r\n\r\n                    <Nominees\r\n                        nominees={nominees}\r\n                        setNominees={setNominees}\r\n                        fromlink={fromlink}\r\n                        setFromLink={setFromLink}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport AppHome from './components/AppHome'\n\nfunction App() {\n  return (\n    <AppHome/>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}